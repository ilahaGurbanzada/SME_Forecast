import pandas as pd
import numpy as np

def forecast_revenue(df):
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Ä—É—á–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π (–∏–º–∏—Ç–∞—Ü–∏—è)
    forecast_values = [4.5, 3.7, 4.0, 4.2, 3.8, 4.3, 4.6, 4.4, 4.9, 5.0, 4.7, 5.2]
    forecast_df = pd.DataFrame({
        'Month': [f'–ú–µ—Å—è—Ü {i+1}' for i in range(12)],
        'Forecast_Net_Income': forecast_values
    })
    return forecast_df

def generate_advice(forecast_df):
    diffs = forecast_df['Forecast_Net_Income'].diff()
    trend = diffs.mean()
    max_val = forecast_df['Forecast_Net_Income'].max()
    min_val = forecast_df['Forecast_Net_Income'].min()
    max_month = forecast_df.loc[forecast_df['Forecast_Net_Income'] == max_val, 'Month'].values[0]
    min_month = forecast_df.loc[forecast_df['Forecast_Net_Income'] == min_val, 'Month'].values[0]

    advice = ""
    if trend > 0:
        advice += f"‚úÖ –í —Ü–µ–ª–æ–º, –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è –≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥ (+{trend:.2f} –º–ª–Ω –≤ —Å—Ä–µ–¥–Ω–µ–º).\n"
    else:
        advice += f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –æ–±—â–∞—è –¥–∏–Ω–∞–º–∏–∫–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è ({trend:.2f} –º–ª–Ω).\n"

    drop_moments = forecast_df[diffs < -0.5]
    if not drop_moments.empty:
        month = drop_moments.iloc[0]['Month']
        amount = drop_moments.iloc[0]['Forecast_Net_Income']
        advice += f"üìâ –í {month} –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ —Ä–µ–∑–∫–æ–µ –ø–∞–¥–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –¥–æ {amount:.2f} –º–ª–Ω.\n"
        advice += "üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: —É–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—Ç—Ä–∞—Ç—ã, —É—Å–∏–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –ª–æ—è–ª—å–Ω–æ—Å—Ç—å.\n"

    advice += f"üî∫ –ú–∞–∫—Å–∏–º—É–º –æ–∂–∏–¥–∞–µ—Ç—Å—è –≤ {max_month} ({max_val:.2f} –º–ª–Ω), –º–∏–Ω–∏–º—É–º ‚Äî –≤ {min_month} ({min_val:.2f} –º–ª–Ω)."

    return advice

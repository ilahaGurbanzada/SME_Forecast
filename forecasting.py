import pandas as pd
from sklearn.linear_model import LinearRegression
import numpy as np

def forecast_revenue(df):
    df = df.copy()
    df['TimeIndex'] = np.arange(len(df))
    y = df['Net_Income'] if 'Net_Income' in df.columns else df.iloc[:, 1]
    X = df[['TimeIndex']]
    model = LinearRegression()
    model.fit(X, y)
    future_periods = 12
    future_X = pd.DataFrame({'TimeIndex': np.arange(len(df), len(df)+future_periods)})
    future_y = model.predict(future_X)
    forecast_df = pd.DataFrame({
        'Month': [f'–ú–µ—Å—è—Ü {i+1}' for i in range(future_periods)],
        'Forecast_Net_Income': future_y
    })
    return forecast_df

def generate_advice(forecast_df):
    trend = forecast_df['Forecast_Net_Income'].diff().mean()
    max_month = forecast_df.loc[forecast_df['Forecast_Net_Income'].idxmax(), 'Month']
    min_month = forecast_df.loc[forecast_df['Forecast_Net_Income'].idxmin(), 'Month']
    if trend > 0:
        return f"–î–æ—Ö–æ–¥—ã —Ä–∞—Å—Ç—É—Ç üìà. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–ª–æ–∂–∏—Ç—å—Å—è –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ {max_month}. –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –≤ {min_month}."
    elif trend < 0:
        return f"–î–æ—Ö–æ–¥—ã —Å–Ω–∏–∂–∞—é—Ç—Å—è üìâ. –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–µ—Ä–µ–¥ {min_month}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∏–∑–∏—Ç—å –∏–∑–¥–µ—Ä–∂–∫–∏."
    else:
        return "–î–æ—Ö–æ–¥—ã —Å—Ç–∞–±–∏–ª—å–Ω—ã. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Ä—ã–Ω–∫–∞."
